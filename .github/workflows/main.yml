name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치로 푸시되거나 병합될 때 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Build the project using Gradle
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Build with Gradle
      run: ./gradlew clean build -x test  # 빌드를 먼저 수행 테스트 생략

    # 1. SSH ec2 연결
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    # 2. JAR 파일 EC2 전송
    - name: Transfer JAR file to EC2
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa build/libs/fm-delivery-0.0.1-SNAPSHOT.jar ec2-user@52.78.3.31:/home/ec2-user/
        scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa Dockerfile ec2-user@52.78.3.31:/home/ec2-user/
    # 3. EC2 내부에서 Docker 로 배포
    - name: Deploy to Docker container on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@52.78.3.31 << EOF
          docker stop fm-delivery-container || true
          docker rm fm-delivery-container || true
          docker build -t fm-delivery-app /home/ec2-user/
          docker run -d --name fm-delivery-container -p 8080:8080 fm-delivery-app
        EOF
